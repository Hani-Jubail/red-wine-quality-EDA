# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
install.packages("ggplot2", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("dplyr", dependencies = T)
library(knitr)
library(dplyr)
install.packages("ggplot2", dependencies = T)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
install.packages("ggplot2", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("dplyr", dependencies = T)
library(ggplot2)
library(knitr)
library(dplyr)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(knitr)
library(dplyr)
# Load the Data
getwd()
# Load the Data
getwd()
df<- read.csv('wineQualityReds')
# Load the Data
getwd()
df<- read.csv("wineQualityReds")
# Load the Data
getwd()
df<- read.csv("C:/Users/PC/Desktop/R/wineQualityReds.csv")
View(df)
ggplot(aes(x = quality), data = df) + geom_histogram()
ggplot(aes(x = quality), data = df) + geom_histogram()
ggplot(aes(x = quality), data = df) + geom_histogram()
summary(df$quality)
ggplot(aes(x = quality), data = df) + geom_histogram()
ggplot(aes(x = alcohol), data = df) + geom_histogram()
ggplot(aes(x = ph), data = df) + geom_histogram()
ggplot(aes(x =pH), data = df) + geom_histogram()
ggplot(aes(x =density), data = df) + geom_histogram()
summary(df)
head(df)
ggplot(aes(x = quality),
data = df) +
geom_histogram()
ggplot(aes(x = alcohol),
data = df)
+ geom_histogram()
ggplot(aes(x = alcohol),
data = df) + geom_histogram()
ggplot(aes(x = alcohol),
data = df)+
geom_histogram()
ggplot(aes(x =pH),
data = df) +
geom_histogram()
ggplot(aes(x =density),
data = df) +
geom_histogram()
ggplot(aes(x =sulphates),
data = df) +
geom_histogram()
ggplot(aes(x =chlorides),
data = df) +
geom_histogram()
ggplot(aes(x =residual.sugar),
data = df) +
geom_histogram()
ggplot(aes(x =fixed.acidity),
data = df) +
geom_histogram()
ggplot(aes(x =volatile.acidity),
data = df) +
geom_histogram()
summary(df$alcohol)
ggplot(aes(x = alcohol),
data = df)+
geom_histogram(binwidth = 0.01)
ggplot(aes(x = alcohol),
data = df)+
geom_histogram(binwidth = 1)
ggplot(aes(x = alcohol),
data = df)+
geom_histogram(binwidth = 0.5)
ggplot(aes(x = alcohol),
data = df)+
geom_histogram(binwidth = 0.2)
ggplot(aes(x = alcohol),
data = df)+
geom_histogram(binwidth = 0.3)
summary(df$pH)
summary(df$density)
summary(df$sulphates)
ggplot(aes(x =chlorides),
data = df) +
geom_histogram()
summary(df$chlorides)
ggplot(aes(x =residual.sugar),
data = df) +
geom_histogram()
summary(df$residual.sugar)
ggplot(aes(x =volatile.acidity),
data = df) +
geom_histogram()
ggplot(aes(x =fixed.acidity),
data = df) +
geom_histogram()
summary(df$residual.sugar)
ggplot(aes(x =volatile.acidity),
data = df) +
geom_histogram()
summary(df$fixed.acidity)
ggplot(aes(x =volatile.acidity),
data = df) +
geom_histogram()
summary(df$volatile.acidity)
install.packages("GGally", dependencies = T)
library(GGally)
library(GGally)
ggpairs(df)
ggpairs(df,columns = 1:9)
ggpairs(df,columns = 2,9)
ggpairs(df,columns = 2:13)
ggplot(aes(x =volatile.acidity),
data = df) +
geom_histogram()
ggpairs(df,columns = pH,chlorides)
ggpairs(df,columns = pH,quality)
ggpairs(df,columns = "pH","quality")
ggpairs(df,columns = "pH","quality","density")
library(GGally)
ggpairs(df,columns = c("quality", "alcohol", "pH", "residual.sugar","density","chlorides","fixed acidity","volatile.acidity"))
library(GGally)
ggpairs(df,columns = c("quality", "alcohol", "pH",
"residual.sugar","density","chlorides",
"fixed.acidity","volatile.acidity"))
ggplot(aes(x = quality, y = alcohol),
data = df)+
geom_point()
ggplot(aes(x = quality, y = alcohol),
data = df)+
geom_line()
ggplot(aes(x = quality, y = alcohol),
data = df)+
geom_point()
ggplot(aes(x = quality, y = pH),
data = df)+
geom_point()
ggplot(aes(x = quality, y = density),
data = df)+
geom_point()
ggplot(aes(x = quality, y = residual.sugar),
data = df)+
geom_point()
